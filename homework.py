# Задача 22: Даны два неупорядоченных набора целых чисел (может быть, с повторениями). 
# Выдать без повторений в порядке возрастания все те числа, которые встречаются в обоих наборах.
# Пользователь вводит 2 списка. 1 строка - первый список через пробел. 2 строка - второй список через пробел.

# def sort_inter_list(*lists):
#     s = {}
#     for item in lists:
#         if len(s):
#             s = set.intersection(s, set(item))
#         else:
#             s = set(item)   
#     return sorted(list(s))

# list1 = list(map(int, input("Введите 1-ый массив: ").split(" ")))
# list2 = list(map(int, input("Введите 2-ой массив: ").split(" ")))

# print(sort_inter_list(list1, list2))


# Задача 24: В фермерском хозяйстве в Карелии выращивают чернику.
# Она растет на круглой грядке, причем кусты высажены только по окружности.
# Таким образом, у каждого куста есть ровно два соседних. Всего на грядке растет N кустов.
# Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них выросло различное число ягод – на i-ом кусте выросло ai ягод.
# В этом фермерском хозяйстве внедрена система автоматического сбора черники.
# Эта система состоит из управляющего модуля и нескольких собирающих модулей.
# Собирающий модуль за один заход, находясь непосредственно перед некоторым кустом, собирает ягоды с этого куста и с двух соседних с ним.
# Напишите программу для нахождения максимального числа ягод, которое может собрать за один заход собирающий модуль,
#  находясь перед некоторым кустом заданной во входном списке содержащим количество ягод на кустах.

def sum_side_by_side(list_start):
    list_sum = []
    list_sum.append(list_start[0] + list_start[1] + list_start[-1])
    for i in range(1,len(list_start)-1):
        list_sum.append(sum(list_start[i-1:i+2]))
    list_sum.append(list_start[-2] + list_start[-1] + list_start[0])    
    return list_sum

list_bush = list(map(int, input("Введите массив: ").split(" ")))
print(f"Максимальное число ягод, которое может собрать за один заход собирающий модуль: {max(sum_side_by_side(list_bush))}")